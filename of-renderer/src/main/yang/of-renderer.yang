/*
 * Copyright (c) 2015 NEC Corporation
 * All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this
 * distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
 */

module of-renderer {
    main.yang-version 1;
    namespace "urn:opendaylight:nic:of:renderer";
    prefix of-renderer;

    import config { prefix config; revision-date 2013-04-05; }
    import opendaylight-md-sal-binding { prefix mdsal; revision-date 2013-10-28; }


    description
      "This module contains the base YANG definition for the OpenFlow Renderer
       implementation";

        description "Initial revision.";
    }

    revision 2015-08-19 {
        description "Initial revision.";
    }

        // This is the definition of the service implementation as a module identity
        identity of-renderer {
                base config:module-type;

                // Specifies the prefix for generated java classes.
                config:java-name-prefix OFRenderer;
        }

        // Augments the 'configuration' choice node under modules/module.
        augment "/config:modules/config:module/config:configuration" {
            case of-renderer {
                when "/config:modules/config:module/config:type = 'of-renderer'";

                //wires in the data-broker service
                container data-broker {
                    uses config:service-ref {
                        refine type {
                            mandatory true;
                            config:required-identity mdsal:binding-async-data-broker;
                        }
                    }
                }
/*  Dont need this for now
                container notification-service {
                    uses config:service-ref {
                      refine type {
                        mandatory false;
                        config:required-identity mdsal:binding-notification-service;
                      }
                   }
                }
                container rpc-registry {
                    uses config:service-ref {
                        refine type {
                            mandatory true;
                            config:required-identity mdsal:binding-rpc-registry;
                        }
                    }
                }
*/
            }
        }

}
